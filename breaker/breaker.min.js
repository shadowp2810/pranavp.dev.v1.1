const canvas=document.getElementById("gameCanvas");const ctx=canvas.getContext("2d");let ballX=canvas.width/2;let ballY=canvas.height-30;let ballDX=3.5;let ballDY=3.5;const ballRadius=10;const halfBallRadius=ballRadius/2;const paddleHeight=10;const paddleWidth=95;let paddleX=(canvas.width-paddleWidth)/2;const paddleDX=7;const brickRowCount=3;const brickColumnCount=5;const brickWidth=75;const brickHeight=20;const brickPadding=10;const brickOffsetTop=30;const brickOffsetLeft=30;const bricks=[];for(let c=0;c<brickColumnCount;c++){bricks[c]=[];for(let r=0;r<brickRowCount;r++){bricks[c][r]={x:0,y:0,status:1,indestructible:false}}}let isPaused=false;let isGameOver=false;let timer=0;let score=0;let timerInterval;let rightPressed=false;let leftPressed=false;const fps=60;const frameDuration=1e3/fps;let lastFrameTime=0;let accumulatedTime=0;const leftBtn=document.getElementById("leftBtn");const rightBtn=document.getElementById("rightBtn");leftBtn.addEventListener("mousedown",(e=>{e.preventDefault();leftPressed=true}));leftBtn.addEventListener("mouseup",(e=>{e.preventDefault();leftPressed=false}));leftBtn.addEventListener("touchstart",(e=>{e.preventDefault();leftPressed=true}));leftBtn.addEventListener("touchend",(e=>{e.preventDefault();leftPressed=false}));rightBtn.addEventListener("mousedown",(e=>{e.preventDefault();rightPressed=true}));rightBtn.addEventListener("mouseup",(e=>{e.preventDefault();rightPressed=false}));rightBtn.addEventListener("touchstart",(e=>{e.preventDefault();rightPressed=true}));rightBtn.addEventListener("touchend",(e=>{e.preventDefault();rightPressed=false}));document.addEventListener("keydown",keyDownHandler);document.addEventListener("keyup",keyUpHandler);function keyDownHandler(e){if(e.key==="Right"||e.key==="ArrowRight"){rightPressed=true}else if(e.key==="Left"||e.key==="ArrowLeft"){leftPressed=true}}function keyUpHandler(e){if(e.key==="Right"||e.key==="ArrowRight"){rightPressed=false}else if(e.key==="Left"||e.key==="ArrowLeft"){leftPressed=false}}function setIndestructibleBrick(){for(let c=0;c<brickColumnCount;c++){for(let r=0;r<brickRowCount;r++){bricks[c][r].indestructible=false}}const randomColumn=Math.floor(Math.random()*brickColumnCount);const randomRow=Math.floor(Math.random()*brickRowCount);bricks[randomColumn][randomRow].indestructible=true;setTimeout(setIndestructibleBrick,5e3)}function drawBall(){ctx.beginPath();ctx.arc(ballX,ballY,ballRadius,0,Math.PI*2);ctx.fillStyle="#fff";ctx.fill();ctx.closePath()}function drawPaddle(){ctx.beginPath();ctx.rect(paddleX,canvas.height-paddleHeight,paddleWidth,paddleHeight);ctx.fillStyle="#fff";ctx.fill();ctx.closePath()}function drawBricks(){for(let c=0;c<brickColumnCount;c++){for(let r=0;r<brickRowCount;r++){const b=bricks[c][r];if(b.status===1){const brickX=c*(brickWidth+brickPadding)+brickOffsetLeft;const brickY=r*(brickHeight+brickPadding)+brickOffsetTop;bricks[c][r].x=brickX;bricks[c][r].y=brickY;ctx.beginPath();ctx.rect(brickX,brickY,brickWidth,brickHeight);ctx.fillStyle=b.indestructible?"#ff0000":"#fff";ctx.fill();ctx.closePath()}}}}function collisionDetection(){for(let c=0;c<brickColumnCount;c++){for(let r=0;r<brickRowCount;r++){const b=bricks[c][r];if(b.status===1){if(ballX+halfBallRadius>b.x&&ballX-halfBallRadius<b.x+brickWidth&&ballY+halfBallRadius>b.y&&ballY-halfBallRadius<b.y+brickHeight){if(b.indestructible){const ballBottom=ballY+ballRadius;const ballTop=ballY-ballRadius;const ballRight=ballX+ballRadius;const ballLeft=ballX-ballRadius;const brickBottom=b.y+brickHeight;const brickTop=b.y;const brickRight=b.x+brickWidth;const brickLeft=b.x;if(ballBottom>brickTop&&ballTop<brickTop){ballDY=-ballDY}else if(ballTop<brickBottom&&ballBottom>brickBottom){ballDY=-ballDY}if(ballRight>brickLeft&&ballLeft<brickLeft){ballDX=-ballDX}else if(ballLeft<brickRight&&ballRight>brickRight){ballDX=-ballDX}}else{ballDY=-ballDY;b.status=0;score++;updateScore();setTimeout((()=>{b.status=1}),3e3)}}}}}}function gameLoop(timestamp=0){if(isPaused||isGameOver)return;if(!lastFrameTime)lastFrameTime=timestamp;const deltaTime=timestamp-lastFrameTime;lastFrameTime=timestamp;accumulatedTime+=deltaTime;while(accumulatedTime>=frameDuration){updateGameLogic();accumulatedTime-=frameDuration}render();requestAnimationFrame(gameLoop)}function updateGameLogic(){if(ballX+ballDX>canvas.width-ballRadius||ballX+ballDX<ballRadius){ballDX=-ballDX}if(ballY+ballDY<ballRadius){ballDY=-ballDY}else if(ballY+ballDY>canvas.height-ballRadius){if(ballX>paddleX&&ballX<paddleX+paddleWidth){ballDY=-ballDY}else{endGame("Game Over!")}}ballX+=ballDX;ballY+=ballDY;if(rightPressed&&paddleX<canvas.width-paddleWidth){paddleX+=paddleDX}else if(leftPressed&&paddleX>0){paddleX-=paddleDX}}function render(){ctx.clearRect(0,0,canvas.width,canvas.height);drawBricks();drawBall();drawPaddle();collisionDetection()}function endGame(message){isGameOver=true;clearInterval(timerInterval);const messageElement=document.getElementById("message");messageElement.textContent=`${message} Time: ${timer} ms, Score: ${score}`;messageElement.style.visibility="visible"}function updateScore(){document.getElementById("score").textContent=`Score: ${score}`}function updateTimer(){document.getElementById("timer").textContent=`Time: ${timer} ms`}function startTimer(){timerInterval=setInterval((()=>{if(!isPaused&&!isGameOver){timer+=10;updateTimer()}}),10)}document.getElementById("pauseResumeBtn").addEventListener("click",(()=>{isPaused=!isPaused;document.getElementById("pauseResumeBtn").textContent=isPaused?"Resume":"Pause";if(!isPaused)requestAnimationFrame(gameLoop)}));document.getElementById("restartBtn").addEventListener("click",(()=>{document.location.reload()}));document.getElementById("homeBtn").addEventListener("click",(()=>{window.location.href="/"}));function initializeGame(){setIndestructibleBrick();startTimer();requestAnimationFrame(gameLoop)}initializeGame();